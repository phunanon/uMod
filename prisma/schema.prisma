generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./db.db"
}

model PermaRole {
  id     Int    @id @default(autoincrement())
  userSf BigInt
  roleSf BigInt
}

model ChannelBan {
  id        Int    @id @default(autoincrement())
  userSf    BigInt
  guildSf   BigInt
  channelSf BigInt

  @@unique([userSf, guildSf, channelSf])
}

model GuildMirror {
  id        Int    @id @default(autoincrement())
  guildSf   BigInt
  channelSf BigInt

  @@unique([guildSf, channelSf])
}

model Member {
  id          Int     @id @default(autoincrement())
  guildSf     BigInt
  userSf      BigInt
  tag         String
  confessMute Boolean @default(false)
  gifMute     Boolean @default(false)
  pingProtect Boolean @default(false)
  numMessages Int     @default(0)

  @@unique([userSf, guildSf])
}

model StickyMessage {
  id             Int      @id @default(autoincrement())
  renewAt        DateTime
  sf             BigInt
  guildSf        BigInt
  channelSf      BigInt
  content        String
  renewalSeconds Int

  @@unique([sf, guildSf, channelSf])
}

model RoleList {
  id        Int    @id @default(autoincrement())
  guildSf   BigInt
  channelSf BigInt
  messageSf BigInt
  roleSf    BigInt
}

model GlobalChat {
  id        Int    @id @default(autoincrement())
  room      String @default("General")
  channelSf BigInt @unique
}

model ActivitySort {
  id         Int    @id @default(autoincrement())
  guildSf    BigInt
  categorySf BigInt

  @@unique([guildSf, categorySf])
}

model Alert {
  id            Int       @id @default(autoincrement())
  guildSf       BigInt
  channelSf     BigInt
  event         String
  userSf        BigInt?
  roleSf        BigInt?
  pattern       String?
  altReason     String?
  cooldownSec   Int?
  cooldownUntil DateTime?
}

model Note {
  id       Int      @id @default(autoincrement())
  guildSf  BigInt
  userSf   BigInt
  authorSf BigInt
  notedAt  DateTime @default(now())
  content  String
}

model Censor {
  id       Int    @id @default(autoincrement())
  guildSf  BigInt
  word     String
  censored String
}

model ChannelFlags {
  id            Int     @id @default(autoincrement())
  channelSf     BigInt  @unique
  unmoderated   Boolean @default(false)
  blockGifs     Boolean @default(false)
  censor        Boolean @default(true)
  singleMessage BigInt?
}

model PingProtectWarns {
  id      Int    @id @default(autoincrement())
  userSf  BigInt
  aboutSf BigInt
  count   Int    @default(1)

  @@unique([userSf, aboutSf])
}

model GuildMods {
  id      Int    @id @default(autoincrement())
  guildSf BigInt
  roleSf  BigInt

  @@unique([guildSf, roleSf])
}

model Histogram {
  id      Int      @id @default(autoincrement())
  since   DateTime @default(now())
  sf      BigInt
  weekDay Int
  dayHour Int
  count   Int

  @@unique([sf, weekDay, dayHour])
}

model TempRole {
  id      Int      @id @default(autoincrement())
  userSf  BigInt
  guildSf BigInt
  roleSf  BigInt
  expires DateTime

  @@unique([userSf, guildSf, roleSf])
}

model Acquaintance {
  id      Int      @id @default(autoincrement())
  since   DateTime @default(now())
  userASf BigInt
  userBSf BigInt
  count   Int

  @@unique([userASf, userBSf])
}

model BumpReminder {
  id        Int      @id @default(autoincrement())
  guildSf   BigInt   @unique
  channelSf BigInt
  remindAt  DateTime

  Users BumpReminderUser[]
}

model BumpReminderUser {
  id     Int    @id @default(autoincrement())
  userSf BigInt

  BumpReminder   BumpReminder @relation(fields: [bumpReminderId], references: [id])
  bumpReminderId Int
}

model DisallowRole {
  id     Int    @id @default(autoincrement())
  userSf BigInt
  roleSf BigInt

  @@unique([userSf, roleSf])
}
